defmodule Scholar.Manifold.MDSTest do
  use Scholar.Case, async: true
  alias Scholar.Manifold.MDS
  doctest MDS

  def x() do
    Nx.iota({10, 50})
  end

  def key() do
    Nx.Random.key(42)
  end

  test "all default" do
    model = EXLA.jit_apply(&MDS.fit(&1, key: &2), [x(), key()])

    assert_all_close(
      model.embedding,
      Nx.tensor([
        [-1200.2181396484375, -1042.11083984375],
        [-985.0137939453125, -750.6790771484375],
        [-706.14013671875, -532.040771484375],
        [-402.91387939453125, -344.8670959472656],
        [-163.916015625, -77.55931091308594],
        [137.63134765625, 111.43733215332031],
        [450.9678649902344, 284.375],
        [712.8345947265625, 524.7731323242188],
        [935.5824584960938, 807.938720703125],
        [1221.1859130859375, 1018.7330932617188]
      ])
    )

    assert_all_close(model.stress, 390.99090576171875)
    assert_all_close(model.n_iter, Nx.tensor(93))
  end

  test "non-default num_components" do
    model = EXLA.jit_apply(&MDS.fit(&1, num_components: 5, key: &2), [x(), key()])

    assert_all_close(
      model.embedding,
      Nx.tensor([
        [
          -753.6793823242188,
          -1215.4837646484375,
          -604.7247314453125,
          136.4171905517578,
          306.40069580078125
        ],
        [
          -536.5817260742188,
          -982.4620971679688,
          -457.0782165527344,
          113.92396545410156,
          232.4468994140625
        ],
        [
          -368.63018798828125,
          -696.4574584960938,
          -344.57952880859375,
          120.76351165771484,
          164.8445281982422
        ],
        [
          -216.7689666748047,
          -406.25250244140625,
          -248.1519317626953,
          85.04608154296875,
          65.24085235595703
        ],
        [
          -52.247528076171875,
          -147.1763916015625,
          -101.35457611083984,
          38.1723747253418,
          -30.632429122924805
        ],
        [
          112.39735412597656,
          137.04685974121094,
          19.412824630737305,
          -15.030402183532715,
          -70.50560760498047
        ],
        [
          270.4787902832031,
          401.2673034667969,
          195.0669403076172,
          -36.55331039428711,
          -105.96172332763672
        ],
        [
          381.5384216308594,
          700.9933471679688,
          348.5281982421875,
          -61.6308708190918,
          -142.2161407470703
        ],
        [
          508.359130859375,
          980.1181030273438,
          507.714111328125,
          -153.78958129882812,
          -164.67311096191406
        ],
        [
          655.1340942382812,
          1228.4066162109375,
          685.1668701171875,
          -227.31895446777344,
          -254.94395446777344
        ]
      ])
    )

    assert_all_close(model.stress, 641.52490234375)
    assert_all_close(model.n_iter, Nx.tensor(130))
  end

  test "non-default metric" do
    model = EXLA.jit_apply(&MDS.fit(&1, metric: false, key: &2), [x(), key()])

    assert_all_close(
      model.embedding,
      Nx.tensor([
        [-0.4574202001094818, 0.43711262941360474],
        [0.5131282210350037, -0.2326662540435791],
        [-0.3391505777835846, -0.44985219836235046],
        [-0.4774346351623535, 0.056608833372592926],
        [0.24871373176574707, 0.2837387025356293],
        [0.2930290699005127, 0.026153063401579857],
        [0.10025614500045776, 0.5481869578361511],
        [-0.012855583801865578, -0.14186446368694305],
        [-0.2434394210577011, -0.12836961448192596],
        [0.16366195678710938, -0.4129194915294647]
      ])
    )

    assert_all_close(model.stress, 1.3884981870651245)
    assert_all_close(model.n_iter, Nx.tensor(16))
  end

  test "option normalized_stress with metric set to false" do
    model =
      EXLA.jit_apply(&MDS.fit(&1, metric: false, key: &2, normalized_stress: true), [x(), key()])

    assert_all_close(
      model.embedding,
      Nx.tensor([
        [0.5613928437232971, 0.0015262559754773974],
        [-0.1498950868844986, 0.07842765003442764],
        [-0.03082980029284954, -0.4600554406642914],
        [-0.38331490755081177, 0.4493577182292938],
        [-0.519985556602478, -0.25569814443588257],
        [0.31080374121665955, -0.3486037254333496],
        [0.18066535890102386, 0.33618786931037903],
        [0.06271502375602722, -0.4786646068096161],
        [0.31948113441467285, 0.38379359245300293],
        [-0.31831350922584534, 0.17909257113933563]
      ])
    )

    assert_all_close(model.stress, 0.2579502761363983)
    assert_all_close(model.n_iter, Nx.tensor(4))
  end

  test "epsilon set to a smaller then default value" do
    model =
      EXLA.jit_apply(&MDS.fit(&1, key: &2, eps: 1.0e-4), [
        x(),
        key()
      ])

    assert_all_close(
      model.embedding,
      Nx.tensor([
        [-1210.033203125, -1031.856689453125],
        [-975.5969848632812, -761.9794921875],
        [-702.4647827148438, -536.8274536132812],
        [-407.57183837890625, -339.2957458496094],
        [-155.5349884033203, -88.32337951660156],
        [139.15322875976562, 109.224853515625],
        [439.394287109375, 299.4696960449219],
        [705.2318725585938, 533.9306030273438],
        [944.5399780273438, 798.44189453125],
        [1222.882568359375, 1017.2158203125]
      ])
    )

    # as expected smaller value of stress (loss) and bigger number of iterations that all default
    assert_all_close(model.stress, 87.6345443725586)
    assert_all_close(model.n_iter, Nx.tensor(196))
  end

  test "smaller max_iter value (100)" do
    model =
      EXLA.jit_apply(
        &MDS.fit(&1, key: &2, eps: 1.0e-4, max_iter: 100),
        [x(), key()]
      )

    assert_all_close(
      model.embedding,
      Nx.tensor([
        [-1201.354736328125, -1040.9530029296875],
        [-983.8963012695312, -752.0218505859375],
        [-705.769775390625, -532.5292358398438],
        [-403.48602294921875, -344.1869201660156],
        [-162.94749450683594, -78.80620574951172],
        [137.8325958251953, 111.14128875732422],
        [449.6497497558594, 286.1120300292969],
        [711.979736328125, 525.80078125],
        [936.6356811523438, 806.8446655273438],
        [1221.3565673828125, 1018.59814453125]
      ])
    )

    # same params as in previous test, but smaller number of iterations, cupped on 100
    assert_all_close(model.stress, 337.1789245605469)
    assert_all_close(model.n_iter, Nx.tensor(100))
  end
end
